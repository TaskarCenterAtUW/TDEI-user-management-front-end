{
    "openapi": "3.0.1",
    "info": {
        "title": "TDEI Gateway Dev API",
        "description": "This is an API for interacting with the Transportation Data Equity Initiative (TDEI) system. It is intended for applications submitting data to and consuming data from the TDEI system. We currently support GTFS-Pathways, GTFS-Flex and OpenSidewalks (OSW) data schemas.",
        "contact": {
            "name": "TDEI",
            "url": "http://www.tdei.us/",
            "email": "admin@tdei.us"
        },
        "version": "v0.1"
    },
    "servers": [
        {
            "url": "https://api-dev.tdei.us/",
            "description": "TDEI API Dev Gateway"
        }
    ],
    "security": [
        {
            "ApiKey": []
        },
        {
            "AuthorizationToken": []
        }
    ],
    "paths": {
        "/api/v1/authenticate": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticates the user with the TDEI system.",
                "description": "Authenticates the user with the TDEI system. Returns an access token, if successfully authenticated.",
                "operationId": "authenticate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginModel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful - Returns the access token for the user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Password does not satisfiy with password policy."
                    },
                    "401": {
                        "description": "Authentication failed - Check username and password."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                }
            }
        },
        "/api/v1/refresh-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Re-issue an access token",
                "description": "Re-issues an access token, if a valid refresh token is sent to the server",
                "operationId": "refreshToken",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string",
                                "description": "The refresh token that was sent through authentication or refresh token API"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful validation of refresh token - Returns the refreshed access token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token provided."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                }
            }
        },
        "/api/v1/datasets": {
            "get": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "Lists the TDEI datasets in the system.",
                "description": "This API lists all TDEI datasets, allowing users to efficiently search with sorting and filtering features. Each dataset entry is uniquely identified by `tdei_dataset_id` and also provide detailed information including metadata, associated project group, service details, download URL, and status. Users can sort datasets by 'valid_to', 'valid_from', 'uploaded date', 'project group name', and 'status'. Filtering options are provided for enhanced discoverability of the datasets.By default all released datasets are visible to all user. Pre-release datasets are only visible to user affiliated with the project groups.",
                "operationId": "listDatasetFiles",
                "parameters": [
                    {
                        "name": "data_type",
                        "in": "query",
                        "description": "Type of the dataset.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "osw",
                                "flex",
                                "pathways"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "This filter allows users to request datasets based on their status. When set to 'All', the filter displays all available datasets by default. If specified as 'Pre-Release' or 'Publish', it shows only the datasets that are in the Pre-Release or Publish stages, respectively, for the project groups the user is affiliated with.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Publish",
                                "Pre-Release",
                                "All"
                            ],
                            "default": "All"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Dataset name or title",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "description": "Dataset version.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_source",
                        "in": "query",
                        "description": "Data source of the dataset.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "3rdParty",
                                "TDEITools",
                                "InHouse"
                            ]
                        }
                    },
                    {
                        "name": "collection_method",
                        "in": "query",
                        "description": "Method by which the data was collected.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "manual",
                                "transform",
                                "generated",
                                "other"
                            ]
                        }
                    },
                    {
                        "name": "collected_by",
                        "in": "query",
                        "description": "Collection agency or person.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived_from_dataset_id",
                        "in": "query",
                        "description": "Dataset id from which this dataset was derived.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collection_date",
                        "in": "query",
                        "description": "Collection date time",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "confidence_level",
                        "description": "Minimum confidence level required. Data returned will be at this confidence level or higher. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "schema_version",
                        "in": "query",
                        "description": "Version name of the data type schema version that the application requests. list of versions can be found with /api/v1/{data_type}/versions.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_project_group_id",
                        "in": "query",
                        "description": "TDEI project group id of the datasets to be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_service_id",
                        "in": "query",
                        "description": "TDEI service id of the datasets to be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "valid_from",
                        "in": "query",
                        "description": "Valid from date time. Date-time for which datasets to be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "valid_to",
                        "in": "query",
                        "description": "Valid to date time. Date-time for which datasets to be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_dataset_id",
                        "in": "query",
                        "description": "tdei_dataset_id of the dataset to be retrieved.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bbox",
                        "in": "query",
                        "description": "A bounding box which specifies the area to be searched. A bounding box is specified by a string providing the lat/lon coordinates of the corners of the bounding box. Coordinate should be specified as west, south, east, north.",
                        "required": false,
                        "schema": {
                            "maxItems": 4,
                            "minItems": 4,
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "example": [
                            -122.153539,
                            47.635463,
                            -122.116939,
                            47.65387
                        ]
                    },
                    {
                        "name": "other_published_locations",
                        "in": "query",
                        "description": "Other published locations",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dataset_update_frequency_months",
                        "in": "query",
                        "description": "Dataset update frequency in months",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "schema_validation_run_description",
                        "in": "query",
                        "description": "Schema validation run description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "full_dataset_name",
                        "in": "query",
                        "description": "Full dataset name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collection_name",
                        "in": "query",
                        "description": "Name of the collection",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "department_name",
                        "in": "query",
                        "description": "Name of the department",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "description": "Name of the city",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "region",
                        "in": "query",
                        "description": "Name of the region",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "county",
                        "in": "query",
                        "description": "Name of the county",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "key_limitations",
                        "in": "query",
                        "description": "Key limitations of the dataset",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "release_notes",
                        "in": "query",
                        "description": "Release notes",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "challenges",
                        "in": "query",
                        "description": "Challenges faced in collecting the data",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "official_maintainer",
                        "in": "query",
                        "description": "Official maintainer of the dataset",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "last_updated",
                        "in": "query",
                        "description": "Date when the dataset was last updated",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "update_frequency",
                        "in": "query",
                        "description": "Frequency of updates",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "authorization_chain",
                        "in": "query",
                        "description": "Authorization chain",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "maintenance_funded",
                        "in": "query",
                        "description": "Is maintenance funded",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "funding_details",
                        "in": "query",
                        "description": "Funding details",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "point_data_collection_device",
                        "in": "query",
                        "description": "Point data collection device",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "node_locations_and_attributes_editing_software",
                        "in": "query",
                        "description": "Node locations and attributes editing software",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_collected_by_people",
                        "in": "query",
                        "description": "Is data collected by people",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "data_collectors",
                        "in": "query",
                        "description": "Data collectors",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_captured_automatically",
                        "in": "query",
                        "description": "Is data captured automatically",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "automated_collection",
                        "in": "query",
                        "description": "Automated collection",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_collectors_organization",
                        "in": "query",
                        "description": "Data collectors organization",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_collector_compensation",
                        "in": "query",
                        "description": "Data collector compensation",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "preprocessing_location",
                        "in": "query",
                        "description": "Preprocessing location",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "preprocessing_by",
                        "in": "query",
                        "description": "Preprocessing by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "preprocessing_steps",
                        "in": "query",
                        "description": "Preprocessing steps",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data_collection_preprocessing_documentation",
                        "in": "query",
                        "description": "Is data collection preprocessing documentation available",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "documentation_uri",
                        "in": "query",
                        "description": "Documentation URI",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "validation_process_exists",
                        "in": "query",
                        "description": "Is validation process exists",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "validation_process_description",
                        "in": "query",
                        "description": "Validation process description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "validation_conducted_by",
                        "in": "query",
                        "description": "Validation conducted by",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "excluded_data",
                        "in": "query",
                        "description": "Excluded data",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "excluded_data_reason",
                        "in": "query",
                        "description": "Excluded data reason",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "Integer, defaults to 1. Retrieves the results in pages.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Page size. integer, between 1 to 50, defaults to 10.Specifies total records per page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    },
                    {
                        "name": "sort_field",
                        "in": "query",
                        "description": "Sort field. By default, it is by uploaded timestamp.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "status",
                                "valid_from",
                                "valid_to",
                                "uploaded_timestamp",
                                "project_group_name"
                            ],
                            "default": "uploaded_timestamp"
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order. By default, it is in descending order.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ],
                            "default": "desc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response - returns an array of dataset entities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DatasetItem"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad input request."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/metadata/{tdei_dataset_id}": {
            "put": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "Updates the metadata of a given dataset",
                "description": "Updates the metadata of a dataset with the metadata in the provided file. Returns status 200 if the action is successful.",
                "operationId": "editMetadata",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Must be a valid TDEI dataset id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Metadata file. see [metadata schema](https://raw.githubusercontent.com/TaskarCenterAtUW/TDEI-osw-datasvc-ts/dev/schema/metadata.schema.json)"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the metadata."
                    },
                    "400": {
                        "description": "The request was invalid. The metadata file provided doesn't adhere to the metadata schema."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to update metadata."
                    },
                    "404": {
                        "description": "Given TDEI dataset ID doesnt exist."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/dataset/clone/{tdei_dataset_id}/{tdei_project_group_id}/{tdei_service_id}": {
            "post": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "Clones the provided dataset to the designated project group and service.",
                "description": "Cloning of a dataset lets one to use the dataset being cloned as the base for a new dataset without having to upload the dataset. This operation clones the datafiles in the dataset `tdei_dataset_id` to the designated project group `tdei_project_group_id` and service `tdei_service_id`, and uses the metadata file provided along with the API as the metadata. Returns cloned dataset id if the action is successful. ",
                "operationId": "cloneDataset",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Valid TDEI dataset id to be cloned.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_project_group_id",
                        "in": "path",
                        "description": "Valid TDEI project group id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_service_id",
                        "in": "path",
                        "description": "Valid TDEI service id associated with the project group.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Metadata file. see [metadata schema](https://raw.githubusercontent.com/TaskarCenterAtUW/TDEI-osw-datasvc-ts/dev/schema/metadata.schema.json)"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Cloning of the dataset successful. ID of the newly cloned dataset returned.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "description": "Cloned dataset ID",
                                    "example": "5f7b1b3b-7b7b-4b7b-8b7b-9b7b1b3b7b7b"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request was invalid."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to clone the dataset."
                    },
                    "404": {
                        "description": "tdei_dataset_id, tdei_project_group_id or tdei_service_id doesn't exist in the system"
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/jobs": {
            "get": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "Shows the details of the jobs that the user has access to.",
                "description": "Returns a list of jobs including request and reponse details. By default only shows the jobs that are submitted by the user.",
                "operationId": "listJobs",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "query",
                        "description": "Get the details for the job with id=job_id only.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_project_group_id",
                        "in": "query",
                        "description": "project group id of the user for which the jobs are listed for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "show_group_jobs",
                        "in": "query",
                        "description": "Make this `true` to see the jobs submitted by others also in the given project group",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    },
                    {
                        "name": "job_type",
                        "in": "query",
                        "description": "Use this to filter for a specific type of job",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Clone-Dataset",
                                "Confidence-Calculate",
                                "Dataset-BBox",
                                "Dataset-Incline-Tag",
                                "Dataset-Publish",
                                "Dataset-Reformat",
                                "Dataset-Road-Tag",
                                "Dataset-Spatial-Join",
                                "Dataset-Union",
                                "Dataset-Upload",
                                "Dataset-Validate",
                                "Edit-Metadata",
                                "Quality-Metric"
                            ]
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Status of the job. Use this to filter jobs by a specific status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "COMPLETED",
                                "FAILED",
                                "IN-PROGRESS",
                                "ABANDONED"
                            ]
                        }
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "Pagination: page number to start the list from. Defaults to 1.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response - returns an array of [JobDetails](#/components/schemas/JobDetails) entities.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/JobDetails"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request is invalid."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "job_id or tdei_project_group_id doesn't exist in the system"
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/job/download/{job_id}": {
            "get": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "Downloads the job output file",
                "description": "Downloads the output file generated by the job",
                "operationId": "job-download",
                "parameters": [
                    {
                        "name": "job_id",
                        "in": "path",
                        "description": "job_id uniquely represents the job request",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response - Downloads the job output file",
                        "content": {
                            "application/octet-stream": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "Job download file not found or Requested job not found."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/dataset/{tdei_dataset_id}": {
            "delete": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "Deletes the Dataset",
                "description": "Deletes the dataset from TDEI system. This operation cannot be undone.",
                "operationId": "deleteDataset",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Valid TDEI Dataset ID ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns true if dataset deleted successfully.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "400": {
                        "description": "Dataset already invalidated.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Dataset not found."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/upload/{tdei_project_group_id}/{tdei_service_id}": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Upload a OSW dataset.",
                "description": "This endpoint enables users to upload an OSW dataset. The request must include the required parameters to complete the upload. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint. By default, the dataset's status will be set to 'pre-release.' The dataset can be published using the `/publish` endpoint.",
                "operationId": "uploadOswFile",
                "parameters": [
                    {
                        "name": "tdei_project_group_id",
                        "in": "path",
                        "description": "Project group id to which the dataset would be uploaded",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_service_id",
                        "in": "path",
                        "description": "TDEI service id associated with the above project group id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived_from_dataset_id",
                        "in": "query",
                        "description": "Dataset id from which this dataset was derived.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "dataset",
                                    "metadata"
                                ],
                                "type": "object",
                                "properties": {
                                    "dataset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "OSW file which is expected to be a zip file, internally has {nodes, edges, points}.geojson. If the extensions are present, then the zip file will have {nodes, edges, points}.extension.geojson files"
                                    },
                                    "metadata": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Metadata information for the OSW dataset. This is a JSON file that includes details on how and when the data was collected, the file's valid dates, and other relevant information about the dataset. For more details, refer to the [metadata schema](https://raw.githubusercontent.com/TaskarCenterAtUW/TDEI-osw-datasvc-ts/dev/schema/metadata.schema.json)."
                                    },
                                    "changeset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "The changeset file records modifications to the sidewalk network included in the OSW dataset. It supports file formats with either .zip or .osc extensions."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The upload request has been accepted for processing. It returns a `job_id`, a unique identifier for the uploaded request, which can be used to track the status of the upload. The endpoint to check the status is provided in the `location` header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "The request's input parameters are invalid."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to upload the dataset."
                    },
                    "404": {
                        "description": "derived_from_dataset_id, tdei_project_group_id or tdei_service_id doesn't exist in the system"
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/publish/{tdei_dataset_id}": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Publishes the OSW dataset for the tdei_dataset_id",
                "description": "Publishes an OSW dataset that was previously uploaded via the [POST] /osw endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers.The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "publishOswFile",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset id of the dataset to be published. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The publish request has been accepted for processing. It returns a `job_id`, a unique identifier for the published request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "The request fails to match the publish criteria."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to publish the dataset."
                    },
                    "404": {
                        "description": "Dataset with the specified tdei_dataset_id was not found. Use the [GET] /api/v1/osw endpoint to find valid dataset ids.",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/validate": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Validates the osw dataset.",
                "description": "Allows a user to validate osw dataset to check the correctness of data. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "validateOswFile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "dataset"
                                ],
                                "type": "object",
                                "properties": {
                                    "dataset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "OSW file which is expected to be a zip file, internally has {nodes, edges, points}.geojson. If the extensions are present, then the zip file will have {nodes, edges, points}.extension.geojson files"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The validate request has been accepted for processing. It returns a `job_id`, a unique identifier for the validate request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "Dataset input file not found."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to validate the dataset."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/convert": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "OSW dataset conversion on demand",
                "description": "This request facilitates the conversion of an OSW dataset to OSM format, or vice versa. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "oswOnDemandFormat",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file",
                                    "source_format",
                                    "target_format"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "OSW dataset file which is to be converted.Supported formats are : .zip, .pbf, .osm,.xml"
                                    },
                                    "source_format": {
                                        "type": "string",
                                        "default": "osw",
                                        "description": "Source dataset format. Supported formats : osm, osw",
                                        "enum": [
                                            "osm",
                                            "osw"
                                        ]
                                    },
                                    "target_format": {
                                        "type": "string",
                                        "description": "Target dataset format. Supported formats : osm, osw",
                                        "default": "osm",
                                        "enum": [
                                            "osm",
                                            "osw"
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The convert request has been accepted for processing. It returns a `job_id`, a unique identifier for the convert request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "The request failed due to an invalid file type, a missing upload file, invalid source or target formats, missing source or target inputs, or identical source and target formats."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                }
            }
        },
        "/api/v1/osw/confidence/{tdei_dataset_id}": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Initiate confidence calculation for a dataset",
                "description": "Initiates the confidence calculation for requested tdei_dataset_id with optional sub-regions.Sub-regions file is a GeoJSON file containing one or more polygons.If the sub-region file is given as an input, the confidence score of each polygon inside the sub-region file will be calculated.The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "oswConfidenceCalculate",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset id of the dataset for which confidence is to be calculated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Sub regions GeoJSON file for which confidence to be calculated"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The confidence request has been accepted for processing. It returns a `job_id`, a unique identifier for the request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing tdei_dataset_id or dataset type is not OSW or invalid sub-region file."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "tdei_dataset_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                }
            }
        },
        "/api/v1/osw/quality-metric/ixn/{tdei_dataset_id}": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Initiate Intersection Quality metric calculation for a dataset",
                "description": "Initiates the Intersection Quality calculation for requested `tdei_dataset_id` with optional intersection polygon file.Intersection polygon file can be a GeoJSON file containing one or more polygons.If intersection polygon file is not given the system creates vornoi polygons based on the dataset area.It is recommended to add intersection polygon file for better performance. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "oswQualityCalculate",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset id of the dataset for which Intersection Quality metric is to be calculated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "(Optional) GeoJSON intersection polygon file to be used to calculate intersection quality metric."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing. It returns a `job_id`, a unique identifier for the request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing tdei_dataset_id or dataset type is not OSW or Invalid intersection file."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "tdei_dataset_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                }
            }
        },
        "/api/v1/osw/quality-metric/tag/{tdei_dataset_id}": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Calculates the quality metric on a dataset element tags",
                "description": "Calculates the quality metric on a dataset element tags for requested tdei_dataset_id. Tags are the specific attributes or characteristics relevant to the OSW data entity. For example entities like Footway, Crossing, and Sidewalk have tags such as surface, width, incline, and length, indicating attributes like the material, size, slope, and distance. Returns the tag quality metric for the dataset element tags.",
                "operationId": "qualityMetricTag",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset ID for calculating the quality metrics of element tags.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "OSW dataset element tag list. Example file format: [tag-quality.json](https://raw.githubusercontent.com/TaskarCenterAtUW/TDEI-osw-datasvc-ts/dev/schema/tag-quality.json). OSW  tag schema definition [osw-tag-definition.json](https://github.com/OpenSidewalks/OpenSidewalks-Schema/blob/Audiom/opensidewalks.schema.json#L5)"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful response - returns the tag quality metric for the given input parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/qualityMetricTagResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Empty tag list or unknown entity type or tag."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token.."
                    },
                    "404": {
                        "description": "tdei_dataset_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/versions": {
            "get": {
                "tags": [
                    "OSW"
                ],
                "summary": "List available OSW versions",
                "description": "List of OSW data standard versions supported by TDEI. The response includes a link to the OSW data standard and specification.",
                "operationId": "listOswVersions",
                "responses": {
                    "200": {
                        "description": "List of API versions supported by TDEI.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/{tdei_dataset_id}": {
            "get": {
                "tags": [
                    "OSW"
                ],
                "summary": "Downloads the OSW dataset",
                "description": "Downloads a specific OSW dataset as a zip file, which includes `{nodes, edges, points}.geojson` files. If file extensions are specified, the zip will contain `{nodes, edges, points}.extension.geojson` files, as well as metadata and a changeset file, if available.",
                "operationId": "getOswFile",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset id of the dataset to be downloaded.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The system maintains two formats for the OSW dataset: OSW and OSM. By default, the OSW format is downloaded.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "osm",
                                "osw"
                            ],
                            "default": "osw"
                        }
                    },
                    {
                        "name": "file_version",
                        "in": "query",
                        "description": "The Latest version includes any recent modifications.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "latest"
                            ],
                            "default": "latest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streams the dataset zip file.",
                        "content": {
                            "application/octet-stream": {}
                        }
                    },
                    "400": {
                        "description": "File version requested is invalid/ tdei_dataset_id is not of type OSW."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "A file with the specified tdei_dataset_id was not found. Use the /api/v1/osw endpoints to find valid file ids or Request file format not found.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/dataset-bbox": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Returns a subgraph dataset that falls within a specified bounding box",
                "description": "When provided with a tdei_dataset_id, this request returns a subgraph dataset that falls within a specified bounding box defined by the coordinates (xmin, ymin, ymax, xmax). The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "datasetBbox",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "query",
                        "description": "Dataset ID to which the bounding box will be applied.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file_type",
                        "in": "query",
                        "description": "Dataset output file type.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "osw",
                                "osm"
                            ]
                        }
                    },
                    {
                        "name": "bbox",
                        "in": "query",
                        "description": "A bounding box defines the search area by specifying the latitude and longitude coordinates of its corners. These coordinates should be provided as a string in the order: west (longitude), south (latitude), east (longitude), north (latitude). This format outlines the geographical area to be searched within the defined perimeter.",
                        "required": true,
                        "schema": {
                            "maxItems": 4,
                            "minItems": 4,
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "double"
                            }
                        },
                        "example": [
                            -122.153539,
                            47.635463,
                            -122.116939,
                            47.65387
                        ]
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing. It returns a `job_id`, a unique identifier for the request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing input/Dataset type is not of type OSW/Invalid bbox input."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "tdei_dataset_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/dataset-tag-road": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Tags the sidewalks with the road network within proximity.",
                "description": "This process involves associating sidewalks from a target dataset with the road network from a source dataset based on proximity. Specifically, any part of the road network that is within a 5-meter buffer zone around the sidewalks in the target dataset gets tagged accordingly. This method ensures that sidewalks are accurately mapped in relation to nearby roads, facilitating better data integration and analysis between different geographic datasets.The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "datasetTagRoad",
                "parameters": [
                    {
                        "name": "source_dataset_id",
                        "in": "query",
                        "description": "Dataset from which the road network to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "target_dataset_id",
                        "in": "query",
                        "description": "Dataset for which the road network is to be tagged",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing. It returns a `job_id`, a unique identifier for the request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing input or dataset not in pre-release state."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to perform the action."
                    },
                    "404": {
                        "description": "source_dataset_id/target_dataset_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/spatial-join": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Performs a spatial join operation between two datasets within the TDEI system.",
                "description": "Performs a spatial join operation between two datasets within the TDEI system. It involves two datasets, target and source, specifying the spatial dimension entities of each to be joined, such as edges, nodes, zones, points, lines, or polygons. The join operation is guided by specified conditions that define how the geometries of the two datasets interact, typically involving spatial functions like intersections. Additionally, filters can be applied to both datasets to refine the data involved in the join. Aggregate functions are also defined to associate the attributes from source to target dataset entity.The geometry column for data elements is specified as `geometry_target` and `geometry_source`.Eg: Find all light poles in source dataset within 5 m of an edge in target dataset, and associate the attribute highway from source dataset with each edge in target dataset. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "osw-spatial-join",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "target_dataset_id": {
                                        "type": "string",
                                        "example": "fa8e12ea-6b0c-4d3e-8b38-5b87b268e76b",
                                        "description": "Unique dataset id defined in TDEI system"
                                    },
                                    "target_dimension": {
                                        "type": "string",
                                        "description": "Valid opensidewalks core entity on which the join operation is to be performed",
                                        "enum": [
                                            "edge",
                                            "node",
                                            "zone"
                                        ]
                                    },
                                    "source_dataset_id": {
                                        "type": "string",
                                        "example": "0d661b69495d47fb838862edf699fe09",
                                        "description": "Unique dataset id defined in TDEI system"
                                    },
                                    "source_dimension": {
                                        "type": "string",
                                        "description": "Valid opensidewalks core entity on which the join operation is to be performed",
                                        "enum": [
                                            "edge",
                                            "node",
                                            "zone",
                                            "point",
                                            "line",
                                            "polygon",
                                            "extension"
                                        ],
                                        "default": "point"
                                    },
                                    "join_condition": {
                                        "type": "string",
                                        "example": "ST_Intersects(ST_Buffer(geometry_target, 5), geometry_source)",
                                        "description": "Condition on which target and source geometry will join. geometry_target & geometry_source are constant variable representing the element geometry.\n"
                                    },
                                    "join_filter_target": {
                                        "type": "string",
                                        "description": "Target attribute filters. These can be any valid attributes defined in the OpenSidewalks schema for the entity.",
                                        "default": "highway='footway' AND footway='sidewalk'"
                                    },
                                    "join_filter_source": {
                                        "type": "string",
                                        "description": "Source attribute filters, These can be any valid attributes defined in the OpenSidewalks schema for the entity",
                                        "default": "highway='street_lamp'"
                                    },
                                    "aggregate": {
                                        "type": "array",
                                        "description": "Agrregate function for attribute. Attribute information to be pulled along from source and attach to target dataset entity. All attribute_name/alias will be prefixed with 'ext:'",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "ARRAY_AGG(highway) as alias",
                                            "min(attribute_name)",
                                            "max(attribute_name)",
                                            "avg(attribute_name)",
                                            "count(attribute_name)",
                                            "sum(attribute_name)"
                                        ]
                                    }
                                },
                                "required": [
                                    "target_dataset_id",
                                    "source_dataset_id",
                                    "join_condition",
                                    "source_dimension",
                                    "target_dimension"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing. It returns a `job_id`, a unique identifier for the request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing input or target dataset or source dataset type is not OSW."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to perform the action."
                    },
                    "404": {
                        "description": "source_dataset_id or target_dataset_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/dataset-inclination/{tdei_dataset_id}": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Adds the incline tag to the dataset",
                "description": "Adds the **incline** tag to a specified dataset identified by the tdei_dataset_id. It takes the dataset ID as a parameter, processes the dataset to calculate the incline information, and updates the dataset with the incline tag.The original data of the dataset will be modified in this request.If the original data already has incline tag, it will be replaced. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "datasetTagIncline",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset ID for calculating the dataset inclination.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing. It returns a `job_id`, a unique identifier for the request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "tdei_dataset_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An server error occurred."
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/osw/union": {
            "post": {
                "tags": [
                    "OSW"
                ],
                "summary": "Performs a union of the two input OSW datasets.",
                "description": "This function merges spatial data from two datasets by unifying overlapping nodes, edges, and polygons into consolidated geometries. It identifies equivalent nodes based on proximity, aligns and merges overlapping edges, and combines adjacent polygons. The function outputs a single cohesive dataset.The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "osw-union",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tdei_dataset_id_one": {
                                        "type": "string",
                                        "example": "fa8e12ea-6b0c-4d3e-8b38-5b87b268e76b",
                                        "description": "Dataset id defined to be unioned"
                                    },
                                    "tdei_dataset_id_two": {
                                        "type": "string",
                                        "example": "0d661b69495d47fb838862edf699fe09",
                                        "description": "Dataset id defined to be unioned"
                                    },
                                    "proximity": {
                                        "type": "number",
                                        "example": "0.5",
                                        "description": "Proximity value to identify equivalent nodes in meters. Default value is 0.5 meters."
                                    }
                                },
                                "required": [
                                    "tdei_dataset_id_one",
                                    "tdei_dataset_id_two"
                                ]
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The request has been accepted for processing. It returns a `job_id`, a unique identifier for the request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "The request body is empty."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "Dataset not found for either tdei_dataset_id_one or tdei_dataset_id_two."
                    },
                    "500": {
                        "description": "An Internal server error occured."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-flex/upload/{tdei_project_group_id}/{tdei_service_id}": {
            "post": {
                "tags": [
                    "GTFS Flex"
                ],
                "summary": "Upload a GTFS Flex dataset.",
                "description": "This endpoint enables users to upload a GTFS-Flex dataset. The request must include the required parameters to complete the upload. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint. By default, the dataset's status will be set to 'pre-release.' The dataset can be published using the /publish endpoint.",
                "operationId": "uploadGtfsFlexFile",
                "parameters": [
                    {
                        "name": "tdei_project_group_id",
                        "in": "path",
                        "description": "Project group id to which the dataset would be uploaded",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_service_id",
                        "in": "path",
                        "description": "TDEI service id associated with the above project group id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived_from_dataset_id",
                        "in": "query",
                        "description": "Dataset id from which this dataset was derived.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "dataset",
                                    "metadata"
                                ],
                                "type": "object",
                                "properties": {
                                    "dataset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "GTFS Flex file which is expected to be a zip file. It typically includes .txt files that define details such as service areas and stops for flexible transit routes."
                                    },
                                    "metadata": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Metadata information for the GTFS-Flex dataset. This is a JSON file that includes details on how and when the data was collected, the file's valid dates, and other relevant information about the dataset. For more details, refer to the [metadata schema](https://raw.githubusercontent.com/TaskarCenterAtUW/TDEI-osw-datasvc-ts/dev/schema/metadata.schema.json)."
                                    },
                                    "changeset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "The changeset file records modifications to the sidewalk network included in the GTFS-Flex dataset. It supports file formats with either .zip or .osc extensions."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The upload request has been accepted for processing. It returns a `job_id`, a unique identifier for the uploaded request, which can be used to track the status of the upload. The endpoint to check the status is provided in the `location` header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "The request's input parameters are invalid."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to upload the dataset."
                    },
                    "404": {
                        "description": "derived_from_dataset_id, tdei_project_group_id or tdei_service_id doesn't exist in the system"
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-flex/publish/{tdei_dataset_id}": {
            "post": {
                "tags": [
                    "GTFS Flex"
                ],
                "summary": "Publishes the GTFS Flex dataset for the tdei_dataset_id",
                "description": "Publishes a GTFS Flex dataset that was previously uploaded via the [POST] /gtfs-flex endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "publishGtfsFlexFile",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset id of the dataset to be published",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The publish request has been accepted for processing. It returns a `job_id`, a unique identifier for the published request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "The request fails to match the publish criteria."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to publish the dataset."
                    },
                    "404": {
                        "description": "Dataset with the specified tdei_dataset_id was not found. Use the [GET] /api/v1/gtfs-flex endpoint to find valid dataset ids.",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-flex/validate": {
            "post": {
                "tags": [
                    "GTFS Flex"
                ],
                "summary": "Validates the GTFS Flex dataset.",
                "description": "Allows a user to validate GTFS Flex dataset to check the correctness of data. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "validateGtfsFlexFile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "dataset"
                                ],
                                "type": "object",
                                "properties": {
                                    "dataset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "GTFS Flex file which is expected to be a zip file. It typically includes .txt files that define details such as service areas and stops for flexible transit routes."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The validate request has been accepted for processing. It returns a `job_id`, a unique identifier for the validate request, which can be used to track the status of the validate request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "Dataset input file not found."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to validate the dataset."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-flex/{tdei_dataset_id}": {
            "get": {
                "tags": [
                    "GTFS Flex"
                ],
                "summary": "Downloads the GTFS Flex dataset",
                "description": "Downloads a specific GTFS Flex dataset as zip containing .txt files that define details such as service areas and stops for flexible transit routes.",
                "operationId": "getGtfsFlexFile",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset id of the dataset to be downloaded.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streams the dataset zip file.",
                        "content": {
                            "application/octet-stream": {}
                        }
                    },
                    "400": {
                        "description": "tdei_dataset_id is not of type GTFS-Flex."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "A file with the specified tdei_dataset_id was not found. Use the /api/v1/gtfs-flex endpoints to find valid file ids.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-flex/versions": {
            "get": {
                "tags": [
                    "GTFS Flex"
                ],
                "summary": "List available GTFS Flex versions",
                "description": "List of GTFS Flex data standard versions supported by TDEI. The response includes a link to the GTFS Flex data standard and specification.",
                "operationId": "listGtfsFlexVersions",
                "responses": {
                    "200": {
                        "description": "Returns list of GTFS Flex versions supported by TDEI.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-pathways/upload/{tdei_project_group_id}/{tdei_service_id}": {
            "post": {
                "tags": [
                    "GTFS Pathways"
                ],
                "summary": "upload a pre-release of GTFS Pathways dataset.",
                "description": "This endpoint enables users to upload a GTFS-Pathways dataset. The request must include the required parameters to complete the upload. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint. By default, the dataset's status will be set to 'pre-release.' The dataset can be published using the /publish endpoint.",
                "operationId": "uploadGtfsPathwaysFile",
                "parameters": [
                    {
                        "name": "tdei_project_group_id",
                        "in": "path",
                        "description": "Project group id to which the dataset would be uploaded",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_service_id",
                        "in": "path",
                        "description": "TDEI service id associated with the above project group id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "derived_from_dataset_id",
                        "in": "query",
                        "description": "Dataset id from which this dataset was derived.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "dataset",
                                    "metadata"
                                ],
                                "type": "object",
                                "properties": {
                                    "dataset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "GTFS Pathways file which is expected to be a zip file, internally has .txt files that represent transit details."
                                    },
                                    "metadata": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Metadata information for the GTFS-Pathways dataset. This is a JSON file that includes details on how and when the data was collected, the file's valid dates, and other relevant information about the dataset. For more details, refer to the [metadata schema](https://raw.githubusercontent.com/TaskarCenterAtUW/TDEI-osw-datasvc-ts/dev/schema/metadata.schema.json)."
                                    },
                                    "changeset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "The changeset file records modifications to the sidewalk network included in the GTFS-Pathways dataset. It supports file formats with either .zip or .osc extensions."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The upload request has been accepted for processing. It returns a `job_id`, a unique identifier for the uploaded request, which can be used to track the status of the upload. The endpoint to check the status is provided in the `location` header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "The request's input parameters are invalid."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to upload the dataset."
                    },
                    "404": {
                        "description": "derived_from_dataset_id, tdei_project_group_id or tdei_service_id doesn't exist in the system"
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-pathways/publish/{tdei_dataset_id}": {
            "post": {
                "tags": [
                    "GTFS Pathways"
                ],
                "summary": "Publishes the GTFS Pathways dataset for the tdei_dataset_id",
                "description": "Publishes an GTFS Pathways dataset that was previously uploaded via the [POST] /gtfs-pathways endpoint, marking it as an official release for the mobility service. This official release status ensures visibility to all TDEI data consumers. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "publishGtfsPathwaysFile",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset id of the dataset to be published.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "The publish request has been accepted for processing. It returns a `job_id`, a unique identifier for the published request, which can be used to track the status of the request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "The request fails to match the publish criteria."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to publish the dataset."
                    },
                    "404": {
                        "description": "Dataset with the specified tdei_dataset_id was not found. Use the [GET] /api/v1/gtfs-pathways endpoint to find valid dataset ids.",
                        "content": {
                            "text/plain": {}
                        }
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-pathways/validate": {
            "post": {
                "tags": [
                    "GTFS Pathways"
                ],
                "summary": "Validates the GTFS Pathways dataset.",
                "description": "Allows a user to validate GTFS Pathways dataset to check the correctness of data. The response includes a `job_id` for tracking the request.To check the request status, refer to the location header in the response, which provides the URL for the status API endpoint.",
                "operationId": "validateGtfsPathwaysFile",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "dataset"
                                ],
                                "type": "object",
                                "properties": {
                                    "dataset": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "GTFS Pathways file which is expected to be a zip file, internally has .txt files that represent transit details."
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "202": {
                        "description": "The validate request has been accepted for processing. It returns a `job_id`, a unique identifier for the validate request, which can be used to track the status of the validate request. The endpoint to check the status is provided in the location header of the response.",
                        "content": {
                            "application/text": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "headers": {
                            "Location": {
                                "schema": {
                                    "type": "string"
                                },
                                "description": "Location api to find the status of request processing"
                            }
                        }
                    },
                    "400": {
                        "description": "Dataset input file not found."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "403": {
                        "description": "User unauthorized to validate the dataset."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-pathways/{tdei_dataset_id}": {
            "get": {
                "tags": [
                    "GTFS Pathways"
                ],
                "summary": "Downloads the GTFS Pathways dataset",
                "description": "Download a specific GTFS Pathways dataset as zip containing .txt files that represent transit details.",
                "operationId": "getGtfsPathwaysFile",
                "parameters": [
                    {
                        "name": "tdei_dataset_id",
                        "in": "path",
                        "description": "Dataset id of the dataset to be downloaded.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Streams the dataset zip file.",
                        "content": {
                            "application/octet-stream": {}
                        }
                    },
                    "400": {
                        "description": "tdei_dataset_id is not of type GTFS Pathways."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "A file with the specified tdei_dataset_id was not found. Use the /api/v1/gtfs-pathways endpoints to find valid file ids.",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/gtfs-pathways/versions": {
            "get": {
                "tags": [
                    "GTFS Pathways"
                ],
                "summary": "List available GTFS Pathways versions",
                "description": "List of GTFS Pathways data standard versions supported by TDEI. The response includes a link to the GTFS Pathways data standard and specification.",
                "operationId": "listGtfsPathwaysVersions",
                "responses": {
                    "200": {
                        "description": "Returns list of GTFS Pathways versions supported by TDEI.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VersionList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/services": {
            "get": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "Lists the TDEI services",
                "description": "Retrieves the list of services in the TDEI system. By default lists all the services in the TDEI system",
                "operationId": "listServices",
                "parameters": [
                    {
                        "name": "tdei_service_id",
                        "in": "query",
                        "description": "Get the details for the service with id=job_id only.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search by service name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tdei_project_group_id",
                        "in": "query",
                        "description": "Gets the services belonging to a specific project group.`tdei_project_group_id` can be retrieved using the api `api/v1/project-groups`",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "service_type",
                        "in": "query",
                        "description": "Type of the service. Default list displays services with all types",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "all",
                            "enum": [
                                "all",
                                "flex",
                                "pathways",
                                "osw"
                            ]
                        }
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "Pagination: page number to start the list from.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response - Returns the list of services. ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ServiceModel"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Service type invalid."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "tdei_service_id or tdei_project_group_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/project-groups": {
            "get": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "List project groups",
                "description": "Retrieves the list of project groups in the TDEI system. By default lists all the prohect groups in the TDEI system.",
                "operationId": "listProjectGroups",
                "parameters": [
                    {
                        "name": "tdei_project_group_id",
                        "in": "query",
                        "description": "Get the details of the project group with id=tdei_project_group_id only.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search by project group name.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_no",
                        "in": "query",
                        "description": "Pagination: page number to start the list from.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 1
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Total records to retrieve.Page size ranges between 1 to 50, defaults to 10.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response - returns the list of Project Groups.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectGroup"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "tdei_project_group_id doesn't exist in the system."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/api": {
            "get": {
                "tags": [
                    "Common APIs"
                ],
                "summary": "List TDEI supported API versions",
                "description": "Returns a list of supported versions of the TDEI API.",
                "operationId": "listApiVersions",
                "responses": {
                    "200": {
                        "description": "Returns a list of supported api versions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIVersionList"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/system-metrics": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "Gets the system metrics",
                "description": "Retrieves metrics related to the system and datasets within the TDEI platform. This endpoint provides an overview of usage statistics including the total number of users, services, and project groups, as well as a breakdown of services by type. Additionally, it gives details on dataset uploads, such as the total number of uploads and their cumulative size in megabytes.",
                "operationId": "system-metrics",
                "responses": {
                    "200": {
                        "description": "Successful response - Returns the system metrics.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "SystemMetricsResponse",
                                    "type": "object",
                                    "$ref": "#/components/schemas/SystemMetrics",
                                    "description": "Holds the response data"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/data-metrics": {
            "get": {
                "tags": [
                    "Metrics"
                ],
                "summary": "Gets the data metrics",
                "description": "This endpoint provides detailed metrics about datasets categorized by type within the TDEI platform. It includes the total number of datasets and their cumulative size in megabytes for each type, such as osw, flex, and pathways. For the osw type, additional aggregated statistics like the number of crossings, length of sidewalks in kilometers, number of edges and nodes, and the area covered by the concave hull in square kilometers are also provided.",
                "operationId": "data-metrics",
                "responses": {
                    "200": {
                        "description": "Successful response - Returns the data metrics.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "DataMetricsResponse",
                                    "type": "object",
                                    "$ref": "#/components/schemas/DataMetrics",
                                    "description": "Holds the response data"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated request"
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                },
                "security": [
                    {
                        "ApiKey": []
                    },
                    {
                        "AuthorizationToken": []
                    }
                ]
            }
        },
        "/api/v1/recover-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request for password recovery",
                "description": "This request initiates a password recovery process for the specified email address. Upon submission, the system sends an email containing a link that the user can follow to reset their password. This allows users to securely update their password if they have forgotten it or wish to change it for security reasons.",
                "operationId": "recoverPassword",
                "requestBody": {
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request for password recovery was successful. An email with a link to reset the password has been sent."
                    },
                    "400": {
                        "description": "Request failed due to an invalid or missing email address."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "An Internal server error occured"
                    }
                }
            }
        },
        "/api/v1/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request for email verification link",
                "description": "This request sends an email verification link to the specified email address. The email verification link is initially sent following successful registration. If the user does not receive the initial verification email, they can request to have the verification link resent.",
                "operationId": "verifyEmail",
                "requestBody": {
                    "content": {
                        "text/plain": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Request for email verification was successful. An email verification link has been sent."
                    },
                    "400": {
                        "description": "Request failed due to an invalid or missing email address."
                    },
                    "401": {
                        "description": "Unauthenticated request. Check your access token."
                    },
                    "404": {
                        "description": "User not found."
                    },
                    "500": {
                        "description": "An Internal server error occured."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "TokenResponse": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "integer",
                        "format": "int64",
                        "description": "value is in seconds"
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "refresh_expires_in": {
                        "type": "integer",
                        "format": "int64",
                        "description": "value is in seconds"
                    }
                },
                "example": {
                    "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",
                    "expires_in": 1740,
                    "refresh_expires_in": 1800,
                    "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            },
            "Feature": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "Feature"
                        ]
                    },
                    "id": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "object"
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/Geometry"
                    }
                }
            },
            "GeoJsonObject": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "enum": [
                            "FeatureCollection"
                        ]
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Feature"
                        }
                    }
                },
                "description": "geo-json polygon"
            },
            "Geometry": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "coordinates": {
                        "minItems": 4,
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "number",
                                    "format": "double"
                                }
                            }
                        }
                    }
                }
            },
            "LoginModel": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string",
                        "description": "email that was used during registration"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            },
            "MetadataModel": {
                "type": "object",
                "properties": {
                    "data_provenance": {
                        "type": "object",
                        "properties": {
                            "full_dataset_name": {
                                "type": "string",
                                "description": "Full name of the dataset"
                            },
                            "other_published_locations": {
                                "type": "string",
                                "description": "Other published locations"
                            },
                            "dataset_update_frequency_months": {
                                "type": "number",
                                "description": "Dataset update frequency in months"
                            },
                            "schema_validation_run": {
                                "type": "boolean",
                                "description": "Is schema validation run"
                            },
                            "schema_validation_run_description": {
                                "type": "string",
                                "description": "Description of schema validation run"
                            },
                            "allow_crowd_contributions": {
                                "type": "boolean",
                                "description": "Is crowd contributions allowed"
                            },
                            "location_inaccuracy_factors": {
                                "type": "string",
                                "description": "Location inaccuracy factors"
                            }
                        }
                    },
                    "dataset_detail": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Dataset Title that this data is known by"
                            },
                            "description": {
                                "type": "string",
                                "description": "Free text description of the data"
                            },
                            "version": {
                                "type": "string",
                                "description": "Dataset version"
                            },
                            "custom_metadata": {
                                "type": "object",
                                "description": "Custom structured JSON metadata"
                            },
                            "collected_by": {
                                "type": "string",
                                "description": "Description of who data was collected by."
                            },
                            "collection_date": {
                                "type": "string",
                                "description": "date-time that data was collected",
                                "example": "2018-22-10T09:30Z"
                            },
                            "valid_from": {
                                "type": "string",
                                "description": "date from which this file is valid",
                                "example": "2023-22-10T09:30Z"
                            },
                            "valid_to": {
                                "type": "string",
                                "description": "date until which this data is valid",
                                "example": "2023-22-10T09:30Z"
                            },
                            "collection_method": {
                                "type": "string",
                                "description": "Method by which the data was collected.",
                                "enum": [
                                    "manual",
                                    "transform",
                                    "generated",
                                    "other"
                                ]
                            },
                            "data_source": {
                                "type": "string",
                                "description": "Description of data source or sources from which the data was collected.",
                                "enum": [
                                    "3rdParty",
                                    "TDEITools",
                                    "InHouse"
                                ]
                            },
                            "dataset_area": {
                                "$ref": "#/components/schemas/GeoJsonObject"
                            },
                            "schema_version": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "name",
                            "version",
                            "collected_by",
                            "collection_date",
                            "valid_from",
                            "collection_method",
                            "data_source",
                            "schema_version"
                        ]
                    },
                    "dataset_summary": {
                        "type": "object",
                        "description": "Summary of the dataset",
                        "properties": {
                            "collection_name": {
                                "type": "string",
                                "description": "Name of the collection"
                            },
                            "department_name": {
                                "type": "string",
                                "description": "Name of the department"
                            },
                            "city": {
                                "type": "string",
                                "description": "Name of the city"
                            },
                            "region": {
                                "type": "string",
                                "description": "Name of the region"
                            },
                            "county": {
                                "type": "string",
                                "description": "Name of the county"
                            },
                            "key_limitations": {
                                "type": "string",
                                "description": "Key limitations of the dataset"
                            },
                            "release_notes": {
                                "type": "string",
                                "description": "Release notes"
                            },
                            "challenges": {
                                "type": "string",
                                "description": "Challenges faced in collecting the data"
                            }
                        }
                    },
                    "maintenance": {
                        "type": "object",
                        "description": "Maintenance details of the dataset",
                        "properties": {
                            "official_maintainer": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "description": "Official maintainer of the dataset"
                            },
                            "last_updated": {
                                "type": "string",
                                "description": "Date when the dataset was last updated"
                            },
                            "update_frequency": {
                                "type": "string",
                                "description": "Frequency of updates"
                            },
                            "authorization_chain": {
                                "type": "string",
                                "description": "Authorization chain"
                            },
                            "maintenance_funded": {
                                "type": "boolean",
                                "description": "Is maintenance funded"
                            },
                            "funding_details": {
                                "type": "string",
                                "description": "Funding details"
                            }
                        }
                    },
                    "methodology": {
                        "type": "object",
                        "properties": {
                            "point_data_collection_device": {
                                "type": "string",
                                "description": "Point data collection device"
                            },
                            "node_locations_and_attributes_editing_software": {
                                "type": "string",
                                "description": "Node locations and attributes editing software"
                            },
                            "data_collected_by_people": {
                                "type": "boolean",
                                "description": "Is data collected by people"
                            },
                            "data_collectors": {
                                "type": "string",
                                "description": "Data collectors"
                            },
                            "data_captured_automatically": {
                                "type": "boolean",
                                "description": "Is data captured automatically"
                            },
                            "automated_collection": {
                                "type": "string",
                                "description": "Automated collection"
                            },
                            "data_collectors_organization": {
                                "type": "string",
                                "description": "Data collectors organization"
                            },
                            "data_collector_compensation": {
                                "type": "string",
                                "description": "Data collector compensation"
                            },
                            "preprocessing_location": {
                                "type": "string",
                                "description": "Preprocessing location"
                            },
                            "preprocessing_by": {
                                "type": "string",
                                "description": "Preprocessing by"
                            },
                            "preprocessing_steps": {
                                "type": "string",
                                "description": "Preprocessing steps"
                            },
                            "data_collection_preprocessing_documentation": {
                                "type": "boolean",
                                "description": "Is data collection preprocessing documentation available"
                            },
                            "documentation_uri": {
                                "type": "string",
                                "description": "Documentation URI"
                            },
                            "validation_process_exists": {
                                "type": "boolean",
                                "description": "Is validation process exists"
                            },
                            "validation_process_description": {
                                "type": "string",
                                "description": "Validation process description"
                            },
                            "validation_conducted_by": {
                                "type": "string",
                                "description": "Validation conducted by"
                            },
                            "excluded_data": {
                                "type": "string",
                                "description": "Excluded data"
                            },
                            "excluded_data_reason": {
                                "type": "string",
                                "description": "Excluded data reason"
                            }
                        }
                    }
                }
            },
            "DatasetItem": {
                "required": [
                    "confidence_level",
                    "download_url",
                    "project_group",
                    "service",
                    "tdei_dataset_id",
                    "uploaded_timestamp",
                    "status",
                    "metadata"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Status of the dataset release",
                        "enum": [
                            "Pre-Release",
                            "Publish"
                        ],
                        "default": "Publish"
                    },
                    "derived_from_dataset_id": {
                        "type": "string",
                        "description": "Dataset id from which this dataset was derived"
                    },
                    "uploaded_timestamp": {
                        "type": "string",
                        "description": "Uploaded timestamp of the dataset"
                    },
                    "project_group": {
                        "type": "object",
                        "description": "tdei-assigned project group id. Represented as UUID. Project Group ids can be retrieved using the /api/v1/project-group path.",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "tdei_project_group_id": {
                                "type": "string",
                                "example": "4e991e7a-5c16-4ebf-ad31-3a3625bcca10"
                            }
                        },
                        "required": [
                            "name",
                            "tdei_project_group_id"
                        ]
                    },
                    "service": {
                        "type": "object",
                        "description": "Service id. Represented as UUID. Project Group ids can be retrieved using the /api/v1/services path.",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "tdei_service_id": {
                                "type": "string",
                                "example": "4e991e7a-5c16-4ebf-ad31-3a3625bcca10"
                            }
                        },
                        "required": [
                            "name",
                            "tdei_service_id"
                        ]
                    },
                    "confidence_level": {
                        "type": "integer",
                        "description": "tdei-generated confidence level. Confidence level range is: 0 (very low confidence) to 100 (very high confidence).",
                        "format": "int32",
                        "example": 41
                    },
                    "tdei_dataset_id": {
                        "type": "string",
                        "description": "unique id identifying the file in the tdei system, can be used to retrieve the file itself.",
                        "example": "4e991e7a-5c16-4ebf-ad31-3a3625bcca10"
                    },
                    "download_url": {
                        "type": "string",
                        "description": "The url from which this file can be downloaded.",
                        "example": "/api/v1/osw/{tdei_dataset_id}"
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/MetadataModel"
                    }
                },
                "description": "represents a osw data file."
            },
            "VersionList": {
                "type": "object",
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "A list of the versions of a data standard (GTFS-Flex, GTFS-Pathways, OSW) supported by TDEI.",
                        "items": {
                            "$ref": "#/components/schemas/VersionSpec"
                        }
                    }
                },
                "description": "List of versions."
            },
            "VersionSpec": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "Version of data standard"
                    },
                    "documentation": {
                        "type": "string",
                        "description": "Link to the data standard documentation."
                    },
                    "specification": {
                        "type": "string",
                        "description": "Link to the data specification."
                    }
                },
                "description": "Response model for data standard versions",
                "example": {
                    "version": "v1.0",
                    "documentation": "link to v1.0 documentation",
                    "specification": "link to the v1.0 specification"
                }
            },
            "APIVersionList": {
                "type": "object",
                "properties": {
                    "versions": {
                        "type": "array",
                        "description": "List of API versions supported by TDEI.",
                        "items": {
                            "$ref": "#/components/schemas/APIVersionSpec"
                        }
                    }
                },
                "description": "List of API versions."
            },
            "APIVersionSpec": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "string",
                        "description": "Version of the API"
                    },
                    "documentation": {
                        "type": "string",
                        "description": "Link to the API documentation."
                    },
                    "specification": {
                        "type": "string",
                        "description": "Link to the API specification."
                    }
                },
                "description": "Response model for API versions",
                "example": {
                    "version": "v1.0",
                    "documentation": "link to v1.0 documentation",
                    "specification": "link to the v1.0 specification"
                }
            },
            "ProjectGroup": {
                "required": [
                    "project_group_name",
                    "polygon"
                ],
                "type": "object",
                "properties": {
                    "polygon": {
                        "$ref": "#/components/schemas/GeoJsonObject"
                    },
                    "tdei_project_group_id": {
                        "type": "string",
                        "description": "Unique id that represents the project group."
                    },
                    "project_group_name": {
                        "type": "string",
                        "description": "Name of the project group."
                    }
                }
            },
            "ServiceModel": {
                "required": [
                    "polygon",
                    "service_name",
                    "tdei_service_id"
                ],
                "type": "object",
                "properties": {
                    "polygon": {
                        "$ref": "#/components/schemas/GeoJsonObject"
                    },
                    "service_name": {
                        "type": "string",
                        "description": "Name of the service",
                        "example": "Hyde Shuttle"
                    },
                    "tdei_service_id": {
                        "type": "string",
                        "description": "Unique id that represents the service",
                        "example": "5e991e7a-5c16-4ebf-ad31-3a3625bcca10"
                    },
                    "service_type": {
                        "type": "string",
                        "description": "Type of the service",
                        "default": "flex",
                        "enum": [
                            "flex",
                            "pathways",
                            "osw"
                        ]
                    }
                }
            },
            "JobDetails": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "description": "job_id of the request",
                        "example": 1
                    },
                    "download_url": {
                        "type": "string",
                        "description": "download_url for requested job. This will be available only if the job is completed and job_type required download_url"
                    },
                    "message": {
                        "type": "string",
                        "description": "Response message from the job process. In case of an error, shows the error messages here."
                    },
                    "status": {
                        "type": "string",
                        "description": "status of the job request",
                        "enum": [
                            "COMPLETED",
                            "FAILED",
                            "IN-PROGRESS",
                            "ABANDONED"
                        ]
                    },
                    "job_type": {
                        "type": "string",
                        "description": "job_type of the job request",
                        "enum": [
                            "Clone-Dataset",
                            "Confidence-Calculate",
                            "Dataset-BBox",
                            "Dataset-Incline-Tag",
                            "Dataset-Publish",
                            "Dataset-Reformat",
                            "Dataset-Road-Tag",
                            "Dataset-Spatial-Join",
                            "Dataset-Union",
                            "Dataset-Upload",
                            "Dataset-Validate",
                            "Edit-Metadata",
                            "Quality-Metric"
                        ]
                    },
                    "tdei_project_group_id": {
                        "type": "string",
                        "description": "tdei project group id under which the job was requested",
                        "example": "4e991e7a-5c16-4ebf-ad31-3a3625bcca10"
                    },
                    "tdei_project_group_name": {
                        "type": "string",
                        "description": "tdei project group nunder which the job was requested",
                        "example": "King County Metro"
                    },
                    "requested_by": {
                        "type": "string",
                        "description": "User who requested this job",
                        "example": "John.Doe@transit.com"
                    },
                    "request_input": {
                        "type": "object",
                        "description": "Inputs that were provided whlie requesting this job"
                    },
                    "response_props": {
                        "type": "object",
                        "description": "Dynamic response object type that depends on the job_type"
                    },
                    "created_at": {
                        "type": "string",
                        "description": "date-time that job was created",
                        "example": "2018-02-10T09:30Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "description": "date-time that job was last updated",
                        "example": "2018-02-10T09:30Z"
                    },
                    "data_type": {
                        "type": "string",
                        "description": "data type of the job request"
                    },
                    "current_stage": {
                        "type": "string",
                        "description": "current processing stage of the job request"
                    },
                    "progress": {
                        "$ref": "#/components/schemas/JobProgress"
                    }
                }
            },
            "JobProgress": {
                "type": "object",
                "description": "Job progress details",
                "properties": {
                    "total_stages": {
                        "type": "integer",
                        "description": "total number of stages in the job"
                    },
                    "current_stage": {
                        "type": "string",
                        "description": "description of the current processing stage of the job"
                    },
                    "completed_stages": {
                        "type": "integer",
                        "description": "number of stages completed in the job"
                    },
                    "current_state": {
                        "type": "string",
                        "description": "status of the job in current state",
                        "enum": [
                            "COMPLETED",
                            "FAILED",
                            "IN-PROGRESS"
                        ]
                    },
                    "current_stage_percent_done": {
                        "type": "integer",
                        "description": "percentage of the current stage completed"
                    },
                    "last_updated_at": {
                        "type": "string",
                        "description": "date-time when the job was last updated",
                        "example": "2024-06-17T06:32:35.842Z"
                    }
                }
            },
            "QualityMetricRequest": {
                "type": "object",
                "description": "Payload for quality metric request",
                "properties": {
                    "algorithms": {
                        "type": "array",
                        "description": "List of algorithms to calculate the quality metric against. Currently supports fixed and random",
                        "items": {
                            "description": "Name of the algorithm",
                            "type": "string",
                            "enum": [
                                "fixed",
                                "random"
                            ]
                        },
                        "example": [
                            "fixed",
                            "random"
                        ]
                    },
                    "persist": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            },
            "qualityMetricTagResponse": {
                "type": "object",
                "properties": {
                    "entity_type": {
                        "type": "string"
                    },
                    "total_entity_count": {
                        "type": "string",
                        "description": "Total number of entities in the dataset"
                    },
                    "overall_quality_metric": {
                        "type": "string",
                        "description": "Overall quality metric for the dataset in percentage"
                    },
                    "metric_details": {
                        "type": "object",
                        "additionalProperties": {
                            "title": "tag",
                            "type": "string",
                            "description": "Quality metric for the tag in percentage",
                            "example": 45.0
                        }
                    }
                },
                "required": [
                    "entity_type",
                    "total_entity_count",
                    "overall_quality_metric",
                    "metric_details"
                ]
            },
            "SystemMetrics": {
                "type": "object",
                "properties": {
                    "systemMetrics": {
                        "type": "object",
                        "properties": {
                            "totalUsers": {
                                "type": "number"
                            },
                            "totalServices": {
                                "type": "number"
                            },
                            "totalProjectGroups": {
                                "type": "number"
                            },
                            "servicesByType": {
                                "type": "object",
                                "properties": {
                                    "osw": {
                                        "type": "number"
                                    },
                                    "flex": {
                                        "type": "number"
                                    },
                                    "pathways": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "osw",
                                    "flex",
                                    "pathways"
                                ]
                            }
                        },
                        "required": [
                            "totalUsers",
                            "totalServices",
                            "totalProjectGroups",
                            "servicesByType"
                        ]
                    },
                    "datasetMetrics": {
                        "type": "object",
                        "properties": {
                            "totalUploads": {
                                "type": "object",
                                "properties": {
                                    "count": {
                                        "type": "number"
                                    },
                                    "totalSizeMB": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "count",
                                    "totalSizeMB"
                                ]
                            }
                        },
                        "required": [
                            "totalUploads"
                        ]
                    }
                }
            },
            "DataMetrics": {
                "type": "object",
                "properties": {
                    "dataMetrics": {
                        "type": "object",
                        "properties": {
                            "datasetByType": {
                                "type": "object",
                                "properties": {
                                    "osw": {
                                        "type": "object",
                                        "properties": {
                                            "totalDatasets": {
                                                "type": "number"
                                            },
                                            "totalSizeMB": {
                                                "type": "number"
                                            },
                                            "aggregatedStats": {
                                                "type": "object",
                                                "properties": {
                                                    "num_crossings": {
                                                        "type": "number"
                                                    },
                                                    "length_of_sidewalks_km": {
                                                        "type": "number"
                                                    },
                                                    "num_edges": {
                                                        "type": "number"
                                                    },
                                                    "num_nodes": {
                                                        "type": "number"
                                                    },
                                                    "concave_hull_area_km2": {
                                                        "type": "number"
                                                    }
                                                },
                                                "required": [
                                                    "num_crossings",
                                                    "length_of_sidewalks_km",
                                                    "num_edges",
                                                    "num_nodes",
                                                    "concave_hull_area_km2"
                                                ]
                                            }
                                        },
                                        "required": [
                                            "totalDatasets",
                                            "totalSizeMB",
                                            "aggregatedStats"
                                        ]
                                    },
                                    "flex": {
                                        "type": "object",
                                        "properties": {
                                            "totalDatasets": {
                                                "type": "number"
                                            },
                                            "totalSizeMB": {
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "totalDatasets",
                                            "totalSizeMB"
                                        ]
                                    },
                                    "pathways": {
                                        "type": "object",
                                        "properties": {
                                            "totalDatasets": {
                                                "type": "number"
                                            },
                                            "totalSizeMB": {
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "totalDatasets",
                                            "totalSizeMB"
                                        ]
                                    }
                                },
                                "required": [
                                    "osw",
                                    "flex",
                                    "pathways"
                                ]
                            }
                        },
                        "required": [
                            "datasetByType"
                        ]
                    }
                },
                "required": [
                    "dataMetrics",
                    "datasetMetrics"
                ]
            }
        },
        "securitySchemes": {
            "AuthorizationToken": {
                "type": "http",
                "description": "Authorization Token required by all applications that use the TDEI Consumer API to perform authorized actions.",
                "scheme": "bearer"
            },
            "ApiKey": {
                "type": "apiKey",
                "description": "Api Key required by all applications that use the TDEI Consumer API.",
                "name": "x-api-key",
                "in": "header"
            }
        }
    }
}