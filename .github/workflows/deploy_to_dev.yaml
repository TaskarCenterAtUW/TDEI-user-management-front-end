on:
  pull_request:
    branches: [dev]
    types:
      - closed
  workflow_dispatch:

jobs:
  Build:
    environment: Development
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v2
      - name: Create env file
        run: |
          touch tdei-ui/.env
          echo REACT_APP_URL=${{ vars.REACT_APP_URL }} >> tdei-ui/.env
          echo REACT_APP_ADMIN_EMAIL= ${{ vars.REACT_APP_ADMIN_EMAIL }} >> tdei-ui/.env
      - name: Build react app
        run: |
          cd tdei-ui && npm install
          rm -rf build/
          unset CI
          npm run build-prod
      - uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_DOMAIN }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Publish image to Azure Registry
        run: |
          docker build -t ${{ secrets.REGISTRY_DOMAIN }}/${{ secrets.REGISTRY_REPO }}:${{ github.sha }} -t ${{ secrets.REGISTRY_DOMAIN }}/${{ secrets.REGISTRY_REPO }}:${{ github.ref_name == 'main' && 'prod' || github.ref_name }}${{ github.ref_name != 'main' && '-latest' || 'latest' }} .
          docker push ${{ secrets.REGISTRY_DOMAIN }}/${{ secrets.REGISTRY_REPO }} --all-tags
  Deploy:
    needs: Build
    environment:
      name: Development
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v2.0.0
        with:
          creds: ${{secrets.TDEI_CORE_AZURE_CREDS}}
      - name: Deploy to Dev
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          images: ${{ secrets.REGISTRY_DOMAIN }}/${{ secrets.REGISTRY_REPO }}:${{ github.sha }}
